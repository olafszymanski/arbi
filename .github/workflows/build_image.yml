name: Build and push image to GAR

on:
  push:
    tags:
      - 'v*'

jobs:
  build-push:
    runs-on: ubuntu-latest
    env:
      GAR_REPOSITORY_LOCATION: europe-central2
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6

      - name: Set up Docker meta
        id: meta
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a
        with:
          images: ${{ env.GAR_REPOSITORY_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/arbi/arbi

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@ceee102ec2387dd9e844e01b530ccd4ec87ce955
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          token_format: access_token

      - name: Login to Google Cloud Platform
        run: |-
          echo '${{ steps.auth.outputs.access_token }}' | docker login -u oauth2accesstoken --password-stdin https://${{ env.GAR_REPOSITORY_LOCATION }}-docker.pkg.dev

      - name: Build the Docker image and push it to the Google Artifact Registry
        uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8
        with:
          context: .
          file: Dockerfile.prod
          push: true
          build-args: |
            GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}
            BINANCE_API_KEY=${{ secrets.BINANCE_API_KEY }}
            BINANCE_SECRET_KEY=${{ secrets.BINANCE_SECRET_KEY }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}